{
  "compilerOptions": {
    // TypeScript what version of JavaScript ECMAScript 13 to compile
    "target": "ES2022",
    // When you define class fields (properties) inside a TypeScript class like (constructor doesn't use)
    "useDefineForClassFields": true,
    "lib": ["ES2022", "DOM", "DOM.Iterable"], //Includes modern JavaScript features &browser APIs (DOM, DOM.Iterable) in type checking.
    "module": "ESNext", //Uses the latest ECMAScript module syntax for imports/exports.
    "types": ["vite/client", "cypress", "node"], //Loads type definitions for Vite, Cypress, and Node.js so TypeScript recognizes their globals.
    "skipLibCheck": true, //Skips type checking of declaration files (.d.ts) to speed up compilation.

    /* Bundler mode */
    "moduleResolution": "bundler", //Optimizes how TypeScript resolves imports for modern bundlers like Vite or Webpack.
    "allowImportingTsExtensions": true,
    // while importing interfaces "type" keyword is must use in import statements
    "verbatimModuleSyntax": true, //Forces TypeScript to treat all files using ES module syntax (import/export) as modules.
    "moduleDetection": "force", //Ensures all files are treated as modules, even if they lack import/export statements.
    "noEmit": true, //Prevents TypeScript from emitting compiled JavaScript files.
    "jsx": "react-jsx", //Enables the new JSX transform for React 17+.(no need for import React in every file).

    /* Linting */
    "strict": true, //Enables all strict type-checking options.
    "noUnusedLocals": true, //Reports errors on unused local variables.
    "noUnusedParameters": true, //Reports errors on unused function parameters.
    "erasableSyntaxOnly": true, //Allows only syntax that can be erased without affecting runtime behavior.
    "noFallthroughCasesInSwitch": true, //Prevents fallthrough between switch cases.
    "noUncheckedSideEffectImports": true //Errors on imports that may have side effects that are not checked.
  },
  "include": ["src", "vite.config.ts", "cypress/**/*.ts"]
}
